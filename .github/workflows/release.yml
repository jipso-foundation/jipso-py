name: Release to PyPI, DockerHub, ReadTheDocs, Codecov, FOSSA, Dependabot, Bandit

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        poetry install

    - name: Run tests with coverage
      run: |
        poetry run pytest tests/release/ --cov=jipso --cov-report=xml

    - name: Run Bandit security scan
      run: |
        poetry run bandit -r jipso -ll || true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true

  dependabot:
    if: ${{ github.actor == 'dependabot[bot]' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Approve Dependabot PR
      uses: hmarr/auto-approve-action@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Auto merge Dependabot PR
      uses: pascalgn/automerge-action@v0.16.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_pypi:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment: release

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Build package with Poetry
      run: |
        poetry install
        poetry build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        attestations: true
        verbose: true

  publish_docker:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment: release

    steps:
    - uses: actions/checkout@v4

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Debug version
      run: echo "ðŸ”– Version is $VERSION"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          jipsofoundation/jipso:latest
          jipsofoundation/jipso:${{ env.VERSION }}

  publish_docs:
    needs: [publish_pypi, publish_docker]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Trigger ReadTheDocs build (versioned)
      run: |
        echo "ðŸ”– Trigger RTD for version: $VERSION"
        curl -X POST \
          -H "Authorization: Token ${{ secrets.READTHEDOCS_TOKEN }}" \
          https://readthedocs.org/api/v3/projects/jipso-py/versions/${VERSION}/builds/
